<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="AdmSysDAO">
	
	<!-- 동영상관리 목록 -->
	<select id="getAdmSysMainMovieList" parameterType="portalxpert.adm.sys.model.AdmSysBbsNotiApndFileVO" resultType="portalxpert.adm.sys.model.AdmSysBbsNotiApndFileVO">
			SELECT
			    B.NOTI_TITLE
			    ,A.APND_FILE_SEQ
			    ,A.NOTI_ID
			    ,A.APND_FILE_TP/*첨부_파일_유형*/
			    ,A.APND_FILE_SZ/*첨부_파일_사이즈*/
			    ,A.APND_FILE_ORGN
			    ,A.APND_FILE_NAME/*첨부_파일_명*/
			    ,A.ADMIN_RCMD_YN/*관리자_추천_여부*/
			    ,NVL(B.NOTI_READ_CNT ,0) READ_CNT
			    ,TO_CHAR(A.ADMIN_RCMD_DTTM,'YYYY-MM-DD') AS ADMIN_RCMD_DTTM/*관리자_추천_일시*/
			    ,A.REGR_NAME/*등록자_명*/
			    ,TO_CHAR(A.REG_DTTM,'YYYY-MM-DD') AS REG_DTTM/*등록_일시*/
			    ,A.UPDR_NAME/*수정자_명*/
			    ,TO_CHAR(A.UPD_DTTM,'YYYY-MM-DD') AS UPD_DTTM/*수정_일시*/
			FROM	BBS_NOTI_APND_FILE A, BBS_NOTI_INFO B
			WHERE	A.NOTI_ID = B.NOTI_ID
			AND	A.DEL_YN = 'N'
			AND	A.APND_FILE_TP = #{apndFileTp}
			AND	A.ADMIN_RCMD_YN = 'Y'
			AND	B.BOARD_ID = DECODE(#{apndFileTp} ,'030' ,'SPT000009' ,'020' ,'SPT000010')
			AND EXISTS (SELECT 1 FROM BBS_BOARD_INFO WHERE BOARD_ID = B.BOARD_ID AND BOARD_FORM = '030'
			       	               AND BOARD_FORM_SPEC = DECODE(#{apndFileTp} ,'030','020' ,'020','010')
			       	  )
			UNION ALL
		   SELECT	P.NOTI_TITLE
						,P.APND_FILE_SEQ
						,P.NOTI_ID
						,P.APND_FILE_TP
						,P.APND_FILE_SZ
						,P.APND_FILE_ORGN
						,P.APND_FILE_NAME
						,P.ADMIN_RCMD_YN
						,P.READ_CNT
						,P.ADMIN_RCMD_DTTM
						,P.REGR_NAME
						,P.REG_DTTM
						,P.UPDR_NAME
						,P.UPD_DTTM
			FROM (
			     SELECT  ROWNUM RNUM, S.*
				   FROM (
						SELECT
						    B.NOTI_TITLE
						    ,A.APND_FILE_SEQ
						    ,A.NOTI_ID
						    ,A.APND_FILE_TP/*첨부_파일_유형*/
						    ,A.APND_FILE_SZ/*첨부_파일_사이즈*/
						    ,A.APND_FILE_ORGN
						    ,A.APND_FILE_NAME/*첨부_파일_명*/
						    ,A.ADMIN_RCMD_YN/*관리자_추천_여부*/
						    ,NVL(B.NOTI_READ_CNT ,0) READ_CNT
						    ,TO_CHAR(A.ADMIN_RCMD_DTTM,'YYYY-MM-DD') AS ADMIN_RCMD_DTTM/*관리자_추천_일시*/
						    ,A.REGR_NAME/*등록자_명*/
						    ,TO_CHAR(B.REG_DTTM,'YYYY-MM-DD') AS REG_DTTM/*등록_일시*/
						    ,A.UPDR_NAME/*수정자_명*/
						    ,TO_CHAR(B.UPD_DTTM,'YYYY-MM-DD') AS UPD_DTTM/*수정_일시*/
						FROM BBS_NOTI_APND_FILE A, BBS_NOTI_INFO B
						WHERE A.NOTI_ID = B.NOTI_ID
						    AND A.DEL_YN = 'N'
						    AND A.APND_FILE_TP = #{apndFileTp}
						    AND (A.ADMIN_RCMD_YN IS NULL OR A.ADMIN_RCMD_YN='N')
						    AND EXISTS (SELECT 1 FROM BBS_BOARD_INFO WHERE BOARD_ID = B.BOARD_ID AND BOARD_FORM = '030'
			       	               			AND BOARD_FORM_SPEC = DECODE(#{apndFileTp} ,'030','020' ,'020','010')
			       	  					)
			       	  	AND	B.BOARD_ID = DECODE(#{apndFileTp} ,'030' ,'SPT000009' ,'020' ,'SPT000010')
						    <if test="searchCondition == 'TITLE'">
						    AND B.NOTI_TITLE LIKE '%' || #{searchKeyword} || '%'
						    </if>
						    <if test="searchCondition == 'FILENAME'">
						    AND A.APND_FILE_ORGN LIKE '%' || #{searchKeyword} || '%'
						    </if>
						    <if test="searchCondition == 'REGNAME'">
						    AND A.REGR_NAME LIKE '%' || #{searchKeyword} || '%'
						    </if>
						<if test="remark=='NEWEST'">
						ORDER BY NVL(B.UPD_DTTM ,B.REG_DTTM) DESC
						</if>
						<if test="remark=='CLICK'">
						ORDER BY NVL(B.NOTI_READ_CNT ,0) DESC ,NVL(B.UPD_DTTM ,B.REG_DTTM) DESC
						</if>
				) S
			) P
			<![CDATA[ WHERE ROWNUM <= #{recordCountPerPage}  and RNUM > #{firstIndex} ]]>
	</select>
	
	<!-- 동영상관리 목록 갯수 -->
	<select id="getAdmSysMainMovieCnt" parameterType="portalxpert.adm.sys.model.AdmSysBbsNotiApndFileVO" resultType="int">
		SELECT COUNT(A.NOTI_ID) totcnt
		FROM BBS_NOTI_APND_FILE A, BBS_NOTI_INFO B
		WHERE A.NOTI_ID = B.NOTI_ID
		    AND A.DEL_YN = 'N'
		    AND A.APND_FILE_TP = #{apndFileTp}
		    AND	B.BOARD_ID = DECODE(#{apndFileTp} ,'030' ,'SPT000009' ,'020' ,'SPT000010')
		    <if test="searchCondition == 'TITLE'">
		    AND B.NOTI_TITLE LIKE '%' || #{searchKeyword} || '%'
		    </if>
		    <if test="searchCondition == 'FILENAME'">
		    AND A.APND_FILE_ORGN LIKE '%' || #{searchKeyword} || '%'
		    </if>
		    <if test="searchCondition == 'REGNAME'">
		    AND A.REGR_NAME LIKE '%' || #{searchKeyword} || '%'
		    </if>
		    
	</select>
	
	<!-- 동영상관리 수정 -->
	<update id="updateAdmSysMainMovie" parameterType="portalxpert.adm.sys.model.AdmSysBbsNotiApndFileVO">
		UPDATE BBS_NOTI_APND_FILE SET
			ADMIN_RCMD_YN = #{adminRcmdYn}
			,ADMIN_RCMD_DTTM = SYSDATE
			,UPDR_ID = #{updrId}
			,UPDR_NAME = #{updrName}
			,UPD_DTTM = SYSDATE
		WHERE NOTI_ID = #{notiId}
			AND APND_FILE_SEQ = #{apndFileSeq}
	</update>


	<!-- 개인쿼터관리 목록 -->
	<select id="getAdmSysPsnQtyList" parameterType="portalxpert.adm.sys.model.AdmSysPsnUserInfoVO" resultType="portalxpert.adm.sys.model.AdmSysPsnUserInfoVO">
		   SELECT
			  	P.USER_ID
			    ,P.USER_NAME
				,P.USER_JOB
			    ,P.DEPT_CODE
			    ,P.DEPT_NAME
			    ,P.PSN_SAVE_QTY
			FROM (
			     SELECT  ROWNUM RNUM, S.*
				   FROM (
			
							SELECT
							    A.USER_ID
							    ,A.USER_NAME
							    ,A.USER_JOB
							    ,A.DEPT_CODE
							    ,B.DEPT_NAME
							    ,A.PSN_SAVE_QTY
							FROM PSN_USER_INFO A, PSN_DEPT_INFO B
							WHERE A.DEPT_CODE = B.DEPT_CODE
							    AND A.DEL_YN = 'N'
							    
							    <if test="searchCondition == 'NAME'">
							    AND A.USER_NAME LIKE '%' || #{searchKeyword} || '%'
							    </if>
							    <if test="searchCondition == 'DEPT'">
							    AND B.DEPT_NAME LIKE '%' || #{searchKeyword} || '%'
							    </if>
							    
							ORDER BY A.REG_DTTM DESC, A.UPD_DTTM DESC
			
				) S
			) P
			<![CDATA[ WHERE ROWNUM <= #{recordCountPerPage}  and RNUM > #{firstIndex} ]]>
	</select>
	
	<!-- 개인쿼터관리 목록 총 갯수 -->
	<select id="getAdmSysPsnQtyCnt" parameterType="portalxpert.adm.sys.model.AdmSysPsnUserInfoVO" resultType="int">
		SELECT COUNT(A.USER_ID) totcnt
		FROM PSN_USER_INFO A, PSN_DEPT_INFO B
		WHERE A.DEPT_CODE = B.DEPT_CODE
		    AND A.DEL_YN = 'N'
		    
		    <if test="searchCondition == 'NAME'">
		    AND A.USER_NAME LIKE '%' || #{searchKeyword} || '%'
		    </if>
		    <if test="searchCondition == 'DEPT'">
		    AND B.DEPT_NAME LIKE '%' || #{searchKeyword} || '%'
		    </if>
		    
	</select>
	
	<!-- 개인쿼터관리 쿼터 수정 -->
	<update id="updateAdmSysPsnQty" parameterType="portalxpert.adm.sys.model.AdmSysPsnUserInfoVO">
		UPDATE PSN_USER_INFO SET
			PSN_SAVE_QTY = #{psnSaveQty}
			,UPDR_ID = #{updrId}
			,UPDR_NAME = #{updrName}
			,UPD_DTTM = SYSDATE
		WHERE USER_ID = #{userId}
	</update>
	
	<!-- SMS쿼터관리 목록 -->
	<select id="getAdmSysSmsQtyList" parameterType="portalxpert.adm.sys.model.AdmSysPsnUserInfoVO" resultType="portalxpert.adm.sys.model.AdmSysPsnUserInfoVO">
		   SELECT
			  	P.USER_ID
			    ,P.USER_NAME
			    ,P.USER_JOB
			    ,P.DEPT_CODE
			    ,P.DEPT_NAME
			    ,P.SMS_BAL_CNT
			    ,P.SMS_ALL_CNT
			FROM (
			     SELECT  ROWNUM RNUM, S.*
				   FROM (
			
							SELECT
							    A.USER_ID
							    ,A.USER_NAME
							    ,A.USER_JOB
							    ,A.DEPT_CODE
							    ,B.DEPT_FNAME AS DEPT_NAME
							    ,A.SMS_BAL_CNT
							    ,A.SMS_ALL_CNT
							FROM PSN_USER_INFO A, PSN_DEPT_INFO B
							WHERE A.DEPT_CODE = B.DEPT_CODE
							    AND A.DEL_YN = 'N'
							    
							    <if test="searchCondition == 'NAME'">
							    AND A.USER_NAME LIKE '%' || #{searchKeyword} || '%'
							    </if>
							    <if test="searchCondition == 'DEPT'">
							    AND B.DEPT_NAME LIKE '%' || #{searchKeyword} || '%'
							    </if>
							    
							ORDER BY A.REG_DTTM DESC, A.UPD_DTTM DESC
			
				) S
			) P
			<![CDATA[ WHERE ROWNUM <= #{recordCountPerPage}  and RNUM > #{firstIndex} ]]>
	</select>
	
	<!-- SMS쿼터관리 목록 총 갯수 -->
	<select id="getAdmSysSmsQtyCnt" parameterType="portalxpert.adm.sys.model.AdmSysPsnUserInfoVO" resultType="int">
		SELECT COUNT(A.USER_ID) totcnt
		FROM PSN_USER_INFO A, PSN_DEPT_INFO B
		WHERE A.DEPT_CODE = B.DEPT_CODE
		    AND A.DEL_YN = 'N'
		    
		    <if test="searchCondition == 'NAME'">
		    AND A.USER_NAME LIKE '%' || #{searchKeyword} || '%'
		    </if>
		    <if test="searchCondition == 'DEPT'">
		    AND B.DEPT_NAME LIKE '%' || #{searchKeyword} || '%'
		    </if>
		    
	</select>
	
	<!-- SMS쿼터관리 쿼터 수정 -->
	<update id="updateAdmSysSmsQty" parameterType="portalxpert.adm.sys.model.AdmSysPsnUserInfoVO">
		UPDATE PSN_USER_INFO SET
			SMS_BAL_CNT = #{smsBalCnt}
			,SMS_ALL_CNT = #{smsAllCnt}
			,UPDR_ID = #{updrId}
			,UPDR_NAME = #{updrName}
			,UPD_DTTM = SYSDATE
		WHERE USER_ID = #{userId}
	</update>
	
	<!-- 태그클라우드관리 목록 -->
	<select id="getAdmSysTagCloudList" parameterType="portalxpert.adm.sys.model.AdmSysTagCloudInfoVO" resultType="portalxpert.adm.sys.model.AdmSysTagCloudInfoVO">
		SELECT
		  	P.TAG_DIV
		    ,P.REG_DIV
			,P.TAG_SEQ
			,P.LINK_NAME
			,P.VISIT_CNT
			,P.LINK_CATE_NAME
			,P.LINK_URL
			,P.TAG_FONT
			,P.BOLD_YN
			,P.FONT_SIZE
			,P.FONT_COLOR
			,P.BKGD_COLOR
			,P.REGR_NAME
			,P.REG_DTTM
			,P.UPDR_NAME
			,P.UPD_DTTM
		FROM (
		     SELECT  ROWNUM RNUM, S.*
			   FROM (
					SELECT
					    TAG_DIV
					    ,REG_DIV
					    ,TAG_SEQ
					    ,LINK_NAME
					    ,VISIT_CNT
					    ,LINK_CATE_NAME
					    ,LINK_URL
					    ,TAG_FONT
					    ,BOLD_YN
					    ,FONT_SIZE
					    ,FONT_COLOR
					    ,BKGD_COLOR
					    ,REGR_NAME
					    ,TO_CHAR(REG_DTTM,'YYY-MM-DD') AS REG_DTTM
					    ,UPDR_NAME
					    ,TO_CHAR(UPD_DTTM,'YYY-MM-DD') AS UPD_DTTM
					FROM ADM_TAG_CLOUD_INFO
					WHERE DEL_YN = 'N'
					
					<if test="tagDiv!=null and tagDiv!=''">
					AND TAG_DIV = #{tagDiv} 
					</if>
					
					<if test="searchCondition == 'NAME'">
					AND REGR_NAME LIKE '%' || #{searchKeyword} || '%'
					</if>
					<if test="searchCondition == 'LINAME'">
					AND LINK_NAME LIKE '%' || #{searchKeyword} || '%'
					</if>
					<if test="searchCondition == 'LICANAME'">
					AND LINK_CATE_NAME LIKE '%' || #{searchKeyword} || '%'
					</if>
					<if test="searchCondition == 'LIURL'">
					AND LINK_URL LIKE '%' || #{searchKeyword} || '%'
					</if>
					
					ORDER BY REG_DIV ,TAG_SEQ ASC
			) S
		) P
		<![CDATA[
		WHERE ROWNUM <= #{recordCountPerPage} and RNUM > #{firstIndex}
		]]>
	</select>
  
  	<!-- 태그클라우드관리 목록 Count -->
	<select id="getAdmSysTagCloudCnt" parameterType="portalxpert.adm.sys.model.AdmSysTagCloudInfoVO" resultType="int">
		SELECT COUNT(1)
  		FROM ADM_TAG_CLOUD_INFO
  		WHERE DEL_YN = 'N'
			<if test="tagDiv!=null and tagDiv!=''">
			AND TAG_DIV = #{tagDiv} 
			</if>
			<if test="searchCondition == 'NAME'">
			AND REGR_NAME LIKE '%' || #{searchKeyword} || '%'
			</if>
			<if test="searchCondition == 'LINAME'">
			AND LINK_NAME LIKE '%' || #{searchKeyword} || '%'
			</if>
			<if test="searchCondition == 'LICANAME'">
			AND LINK_CATE_NAME LIKE '%' || #{searchKeyword} || '%'
			</if>
			<if test="searchCondition == 'LIURL'">
			AND LINK_URL LIKE '%' || #{searchKeyword} || '%'
			</if>
	</select>
	
	<!-- 태그클라우드관리 단건 -->
	<select id="getAdmSysTagCloud" parameterType="portalxpert.adm.sys.model.AdmSysTagCloudInfoVO" resultType="portalxpert.adm.sys.model.AdmSysTagCloudInfoVO">
		SELECT
		    TAG_DIV
		    ,REG_DIV
		    ,TAG_SEQ
		    ,LINK_CATE_CODE
		    ,LINK_CODE
		    ,LINK_NAME
		    ,VISIT_CNT
		    ,LINK_CATE_NAME
		    ,LINK_URL
		    ,TAG_FONT
		    ,BOLD_YN
		    ,FONT_SIZE
		    ,FONT_COLOR
		    ,BKGD_COLOR
		    ,DEL_YN
		    ,REGR_ID
		    ,REGR_NAME
		    ,TO_CHAR(REG_DTTM,'YYY-MM-DD') AS REG_DTTM
		    ,UPDR_ID
		    ,UPDR_NAME
		    ,TO_CHAR(UPD_DTTM,'YYY-MM-DD') AS UPD_DTTM
		FROM ADM_TAG_CLOUD_INFO
		WHERE DEL_YN = 'N'
			AND TAG_DIV = #{tagDiv}
			AND REG_DIV = #{regDiv}
			AND TAG_SEQ = #{tagSeq}
	</select>
	
	<!-- 링크분류조회 combo -->
	<select id="getAdmSysTagCloudLinkCtlgList" resultType="portalxpert.adm.gen.model.AdmGenLinkVO">
		SELECT	LINK_CAT_ID
					,LINK_CAT_NM
					,LINK_CAT_ORDER
		FROM	ADM_BIZ_LINK_CATEGORY
		WHERE	END_DATE IS NULL
		ORDER BY LINK_CAT_ORDER
	</select>
	
	<!-- 링크조회 combo -->
	<select id="getAdmSysTagCloudLinkList" parameterType="portalxpert.adm.gen.model.AdmGenLinkVO" resultType="portalxpert.adm.gen.model.AdmGenLinkVO">
		SELECT	LINK_CAT_ID
					,LINK_CD
					,LINK_ORDER
					,LINK_ADDRESS
					,LINK_NM
					,LINK_SNM
					,POPUP_USE_GB
		FROM	ADM_BIZ_LINK
		WHERE	LINK_CAT_ID = #{linkCatId}
		AND	END_DATE IS NULL
		ORDER BY LINK_ORDER
	</select>
	
	<!-- 태그클라우드관리 등록 -->
	<insert id="insertAdmSysTagCloud" parameterType="portalxpert.adm.sys.model.AdmSysTagCloudInfoVO">
		INSERT INTO ADM_TAG_CLOUD_INFO
		    (
		    TAG_DIV
		    ,REG_DIV
		    ,TAG_SEQ
		    ,LINK_CATE_CODE
		    ,LINK_CODE
		    ,LINK_NAME
		    ,VISIT_CNT
		    ,LINK_CATE_NAME
		    ,LINK_URL
		    ,TAG_FONT
		    ,BOLD_YN
		    ,FONT_SIZE
		    ,FONT_COLOR
		    ,BKGD_COLOR
		    ,DEL_YN
		    ,REGR_ID
		    ,REGR_NAME
		    ,REG_DTTM
		    ,UPDR_ID
		    ,UPDR_NAME
		    ,UPD_DTTM
		    )
		VALUES
		    (
		    #{tagDiv}
		    ,'ADM'
		    ,(SELECT (NVL(MAX(TAG_SEQ),0)+1) FROM ADM_TAG_CLOUD_INFO)
		    ,#{linkCateCode, javaType=String, jdbcType=VARCHAR}
		    ,#{linkCode, javaType=String, jdbcType=VARCHAR}
		    ,#{linkName, javaType=String, jdbcType=VARCHAR}
		    ,(SELECT VISIT_CNT FROM ADM_TAG_CLOUD_INFO WHERE LINK_CODE=#{linkCode, javaType=String, jdbcType=VARCHAR} AND TAG_DIV=#{tagDiv} AND REG_DIV='SYS')
		    ,#{linkCateName, javaType=String, jdbcType=VARCHAR}
		    ,#{linkUrl, javaType=String, jdbcType=VARCHAR}
		    ,#{tagFont, javaType=String, jdbcType=VARCHAR}
		    ,#{boldYn, javaType=String, jdbcType=VARCHAR}
		    ,#{fontSize, javaType=Long, jdbcType=NUMERIC}
		    ,#{fontColor, javaType=String, jdbcType=VARCHAR}
		    ,#{bkgdColor, javaType=String, jdbcType=VARCHAR}
		    ,'N'
		    ,#{regrId}
		    ,#{regrName}
		    ,SYSDATE
		    ,#{regrId}
		    ,#{regrName}
		    ,SYSDATE
		    )
	</insert>
	
	<!-- 태그클라우드관리 수정 -->
 	<update id="updateAdmSysTagCloud" parameterType="portalxpert.adm.sys.model.AdmSysTagCloudInfoVO">
 		UPDATE ADM_TAG_CLOUD_INFO SET
		    LINK_CATE_CODE = #{linkCateCode}
		    ,LINK_CODE = #{linkCode}
		    ,LINK_NAME = #{linkName}
		    ,LINK_CATE_NAME = #{linkCateName}
		    ,LINK_URL = #{linkUrl}
		    ,TAG_FONT = #{tagFont}
		    ,BOLD_YN = #{boldYn}
		    ,FONT_SIZE = #{fontSize}
		    ,FONT_COLOR = #{fontColor}
		    ,BKGD_COLOR = #{bkgdColor}
		    ,UPDR_ID = #{updrId}
		    ,UPDR_NAME = #{updrName}
		    ,UPD_DTTM = SYSDATE
		WHERE TAG_DIV = #{tagDiv}
		    AND REG_DIV = #{regDiv}
		    AND TAG_SEQ = #{tagSeq}
 	</update>
		
	<!-- 태그클라우드관리 삭제 -->
	<update id="deleteAdmSysTagCloud" parameterType="portalxpert.adm.sys.model.AdmSysTagCloudInfoVO">
		UPDATE ADM_TAG_CLOUD_INFO SET
		    DEL_YN = 'Y'
		    ,UPDR_ID = #{updrId}
		    ,UPDR_NAME = #{updrName}
		    ,UPD_DTTM = SYSDATE
		WHERE TAG_DIV = #{tagDiv}
		    AND REG_DIV = #{regDiv}
		    AND TAG_SEQ = #{tagSeq}
	</update>
	
	
	
	
	
	<!-- ************************** 신규 추가 **************************************** -->
	
	
	
	
	<!-- 사용자 목록 -->
	<select id="getAdmSysUserInfoList" parameterType="portalxpert.adm.sys.model.AdmSysPsnUserInfoVO"
	resultType="portalxpert.adm.sys.model.AdmSysPsnUserInfoVO">
		<![CDATA[
			SELECT    P.USER_ID
	                , P.USER_NAME
	                , P.USER_NICK 
	                , P.DEPT_CODE 
	                , P.DEPT_FNAME
	                , P.TELEPHONENUMBER
	                , P.MOBILE
	                , P.MAIL
	                , P.USER_PASSWORD
	                , P.DEL_YN
	                , RNUM SEQ		
			FROM
			(
				SELECT	ROWNUM RNUM ,B.*
				FROM (
					SELECT A.* FROM
					(		
						SELECT    PU.USER_ID
				                , PU.USER_NAME
				                , USER_NICK 
				                , LD.DEPT_CODE 
				                , LD.DEPT_FNAME
				                , PU.TELEPHONENUMBER
				                , PU.MOBILE
				                , PU.MAIL
				                , PU.USER_PASSWORD
				                , PU.DEL_YN
				        FROM      PSN_USER_INFO PU
				                , PSN_DEPT_INFO LD
				        WHERE PU.DEPT_CODE = LD.DEPT_CODE(+)
				        AND   PU.DEL_YN = 'N'
						]]>
						<if test="searchCondition !=null and searchCondition !=''">
							<if test="searchCondition == 'USER_NAME'">
							AND PU.USER_NAME LIKE '%'||#{searchKeyword}||'%'
							</if>
							<if test="searchCondition == 'REGR_NAME'">
							AND PU.REGR_NAME LIKE '%'||#{searchKeyword}||'%'
							</if>
						</if>	
					) A
					ORDER BY A.USER_NAME
				) B	
			) P
			<![CDATA[
			WHERE RNUM <= #{recordCountPerPage} + #{firstIndex}  and RNUM > #{firstIndex}
			]]>			
	</select>
	
	<select id="getAdmSysUserInfoListCnt" parameterType="portalxpert.adm.sys.model.AdmSysPsnUserInfoVO"
	resultType="int">
		<![CDATA[
				SELECT    COUNT(PU.USER_ID) CNT
		        FROM      PSN_USER_INFO PU
		                , PSN_DEPT_INFO LD
		        WHERE PU.DEPT_CODE = LD.DEPT_CODE(+)
		        AND   PU.DEL_YN = 'N'
				]]>
				<if test="searchCondition !=null and searchCondition !=''">
					<if test="searchCondition == 'USER_NAME'">
					AND PU.USER_NAME LIKE '%'||#{searchKeyword}||'%'
					</if>
					<if test="searchCondition == 'REGR_NAME'">
					AND PU.REGR_NAME LIKE '%'||#{searchKeyword}||'%'
					</if>
				</if>	
	</select>
	
	
	<!-- 사용자 정보 -->
	<select id="getAdmSysUserInfo" parameterType="portalxpert.adm.sys.model.AdmSysPsnUserInfoVO"
	resultType="portalxpert.adm.sys.model.AdmSysPsnUserInfoVO">
		<![CDATA[
		SELECT    PU.USER_ID
                , PU.USER_NAME
                , USER_NICK 
                , LD.DEPT_CODE 
                , LD.DEPT_FNAME
                , PU.MOBILE
                , PU.MAIL
                , PU.USER_PASSWORD
                , PU.DEL_YN
        FROM      PSN_USER_INFO PU
                , PSN_DEPT_INFO LD
        WHERE PU.DEPT_CODE = LD.DEPT_CODE(+)
        AND   PU.USER_ID = #{userId}    
        AND   PU.DEL_YN = 'N'
		]]>
	</select>
	
	<insert id="insertPsnUserInfo" parameterType="portalxpert.adm.sys.model.AdmSysPsnUserInfoVO">
		<![CDATA[
		INSERT INTO PSN_USER_INFO(
		 USER_ID
		, USER_NAME
		, USER_PASSWORD
		, USER_NICK
		, USER_JOB
		, SLCT_POTO_SEQ
		, USER_BIRTH
		, MAIL
		, MOBILE
		, TELEPHONENUMBER
		, DEPT_CODE
		, DEPT_NAME
		, DEPT_FNAME
		, DEL_YN
		, REGR_ID
		, REGR_NAME
		, REG_DTTM
		, UPDR_ID
		, UPDR_NAME
		, UPD_DTTM
		) VALUES (
		 #{userId}
		, #{userName}
		, #{userPassword}
		, #{userNick}
		, #{userJob}
		, #{slctPotoSeq}
		, #{userBirth}
		, #{mail}
		, #{mobile}
		, #{telephonenumber}
		, #{deptCode}
		, (SELECT DEPT_NAME FROM PSN_DEPT_INFO WHERE DEPT_CODE = #{deptCode})
		, (SELECT DEPT_FNAME FROM PSN_DEPT_INFO WHERE DEPT_CODE = #{deptCode})
		, #{delYn}
		, #{updrId}
		, #{updrName}
		, sysdate
		, #{updrId}
		, #{updrName}
		, sysdate
		)
		]]>
	</insert>	

	<update id="updatePsnUserInfo" parameterType="portalxpert.adm.sys.model.AdmSysPsnUserInfoVO">
		<![CDATA[
			UPDATE PSN_USER_INFO SET UPDR_ID = #{updrId}, UPD_DTTM = sysdate
		]]>
		<if test="userName != null and userName != ''"> , USER_NAME = #{userName} </if>		
		<if test="userPassword != null and userPassword != ''"> , USER_PASSWORD = #{userPassword} </if>
		<if test="userJob != null and userJob != ''"> , USER_JOB = #{userJob} </if>
		<if test="userBirth != null and userBirth != ''"> , USER_BIRTH = #{userBirth} </if>
		<if test="mail != null and mail != ''"> , MAIL = #{mail} </if>
		<if test="mobile != null and mobile != ''"> , MOBILE = #{mobile} </if>
		<if test="telephonenumber != null and telephonenumber != ''"> , TELEPHONENUMBER = #{telephonenumber} </if>
		<if test="deptCode != null and deptCode != ''"> 
			, DEPT_CODE = #{deptCode}
			, DEPT_NAME =  (SELECT DEPT_NAME FROM PSN_DEPT_INFO WHERE DEPT_CODE = #{deptCode})
			, DEPT_FNAME =  (SELECT DEPT_FNAME FROM PSN_DEPT_INFO WHERE DEPT_CODE = #{deptCode})
		</if>
		<if test="delYn != null and delYn != ''"> , DEL_YN = #{delYn} </if>
		WHERE USER_ID = #{userId}
	</update>
	
	<select id="getAdmSysAuthList" parameterType="portalxpert.adm.sys.model.AdmSysAuthVO"
	resultType="portalxpert.adm.sys.model.AdmSysAuthVO">
		<![CDATA[
			SELECT    P.AUTH_CD
	                , P.AUTH_NM
	                , P.AUTH_DESC
	                , P.URL_PTN
	                , P.REG_DTTM
	                , P.DEL_YN
	                , RNUM SEQ		
			FROM
			(
				SELECT	ROWNUM RNUM ,B.*
				FROM (
					SELECT A.* FROM
					(			
						SELECT    A.AUTH_CD
				                , A.AUTH_NM
				                , A.AUTH_DESC
				                , A.URL_PTN
				                , A.DEL_YN
				                , TO_CHAR(A.REG_DTTM, 'YYYY-MM-DD') REG_DTTM
				        FROM      ADM_AUTH A
				        WHERE A.DEL_YN = 'N'
						]]>
						<if test="searchCondition !=null and searchCondition !=''">
							<if test="searchCondition == 'AUTH_NM'">
							AND A.AUTH_NM LIKE '%'||#{searchKeyword}||'%'
							</if>
							<if test="searchCondition == 'AUTH_CD'">
							AND A.AUTH_CD LIKE '%'||#{searchKeyword}||'%'
							</if>
						</if>	
					) A
					ORDER BY A.AUTH_CD
				) B	
			) P
			<![CDATA[
			WHERE RNUM <= #{recordCountPerPage} + #{firstIndex}  and RNUM > #{firstIndex}
			]]>			
	</select>	
	
	<select id="getAdmSysAuthListCnt" parameterType="portalxpert.adm.sys.model.AdmSysAuthVO"
	resultType="int">
		<![CDATA[
		SELECT    COUNT(A.AUTH_CD) CNT
        FROM      ADM_AUTH A
        WHERE A.DEL_YN = 'N'
		]]>
	</select>	
	
	<select id="getAdmSysAuthInfo" parameterType="portalxpert.adm.sys.model.AdmSysAuthVO"
	resultType="portalxpert.adm.sys.model.AdmSysAuthVO">
		<![CDATA[
		SELECT    A.AUTH_CD
                , A.AUTH_NM
                , A.AUTH_DESC
                , A.URL_PTN
                , A.DEL_YN
        FROM      ADM_AUTH A
        WHERE A.AUTH_CD = #{authCd}
        AND  A.DEL_YN = 'N'
		]]>
	</select>
	
	<select id="getAuchCodeList" parameterType="portalxpert.adm.sys.model.AdmSysAuthVO"
	resultType="portalxpert.adm.sys.model.AdmSysAuthVO">
		<![CDATA[
		SELECT    A.AUTH_CD
                , A.AUTH_NM
                , A.AUTH_DESC
                , A.URL_PTN
                , A.DEL_YN
        FROM      ADM_AUTH A
        WHERE  A.DEL_YN = 'N'
        ORDER BY A.AUTH_NM
		]]>
	</select>
	
	<insert id="insertAuth" parameterType="portalxpert.adm.sys.model.AdmSysAuthVO">
		<![CDATA[
		INSERT INTO ADM_AUTH(
		 AUTH_CD
		, AUTH_NM
		, AUTH_DESC
		, URL_PTN
		, DEL_YN
		, REGR_ID
		, REGR_NAME
		, REG_DTTM
		, UPDR_ID
		, UPDR_NAME
		, UPD_DTTM
		) VALUES (
		 #{authCd}
		, #{authNm}
		, #{authDesc}
		, #{urlPtn}
		, #{delYn}
		, #{updrId}
		, #{updrName}
		, sysdate
		, #{updrId}
		, #{updrName}
		, sysdate
		)
		]]>
	</insert>		

	<update id="updateAuth" parameterType="portalxpert.adm.sys.model.AdmSysAuthVO">
		<![CDATA[
			UPDATE ADM_AUTH SET UPDR_ID = #{updrId}, UPD_DTTM = sysdate
									,AUTH_Nm = #{authNm}, AUTH_DESC = #{authDesc}, URL_PTN = #{urlPtn}
		]]>
		<if test="delYn != null and delYn != ''"> , DEL_YN = #{delYn} </if>
		WHERE AUTH_CD = #{authCd}
	</update>	
	
	<select id="getAdmSysUserAuthInfo" parameterType="portalxpert.adm.sys.model.AdmSysUserAuthVO"
	resultType="portalxpert.adm.sys.model.AdmSysUserAuthVO">
		<![CDATA[
		SELECT    A.USER_ID
                , A.USER_NAME
                , B.AUTH_CD
                , C.AUTH_NM
                , C.AUTH_DESC
                , B.DEL_YN
        FROM      PSN_USER_INFO A
                , ADM_USER_AUTH B
                , ADM_AUTH C
        WHERE A.USER_ID = B.USER_ID
        AND   A.USER_ID = #{userId}
        AND   B.AUTH_CD = C.AUTH_CD
        AND   B.DEL_YN = 'N'
		]]>
	</select>
	
	<insert id="insertUserAuth" parameterType="portalxpert.adm.sys.model.AdmSysUserAuthVO">
		<![CDATA[
		INSERT INTO ADM_USER_AUTH(
		 USER_ID
		, AUTH_CD
		, DEL_YN
		, REGR_ID
		, REGR_NAME
		, REG_DTTM
		, UPDR_ID
		, UPDR_NAME
		, UPD_DTTM
		) VALUES (
		 #{userId}
		, #{authCd}
		, #{delYn}
		, #{updrId}
		, #{updrName}
		, sysdate
		, #{updrId}
		, #{updrName}
		, sysdate
		)
		]]>
	</insert>		

	<update id="updateUserAuth" parameterType="portalxpert.adm.sys.model.AdmSysUserAuthVO">
		<![CDATA[
			UPDATE ADM_USER_AUTH SET UPDR_ID = #{updrId}, UPD_DTTM = sysdate
									, AUTH_CD = #{authCd}
		]]>
		<if test="delYn != null and delYn != ''"> , DEL_YN = #{delYn} </if>
		WHERE USER_ID = #{userId}
	</update>
	
	<delete id="deleteUserAuth" parameterType="portalxpert.adm.sys.model.AdmSysUserAuthVO">
		DELETE FROM ADM_USER_AUTH 
		WHERE USER_ID = #{userId}
	</delete>

	<select id="getAdmSysMenuAuthInfo" parameterType="portalxpert.adm.sys.model.AdmSysMenuAuthVO"
	resultType="portalxpert.adm.sys.model.AdmSysMenuAuthVO">
		<![CDATA[
		SELECT    A.AUTH_CD
                , A.MENU_CONTS
                , A.DEL_YN
        FROM      ADM_MENU_AUTH A
        WHERE A.AUTH_CD = #{authCd}
        AND   A.DEL_YN = 'N'
		]]>
	</select>

	<select id="getAdmSysNoSystemMenuAuthInfo" parameterType="portalxpert.adm.sys.model.AdmSysMenuAuthVO"
	resultType="portalxpert.adm.sys.model.AdmSysMenuAuthVO">
		<![CDATA[
		SELECT    A.AUTH_CD
                , A.MENU_CONTS
                , A.DEL_YN
        FROM      ADM_MENU_AUTH A
        WHERE A.AUTH_CD != #{authCd}
        AND   A.DEL_YN = 'N'
		]]>
	</select>
			
	<insert id="insertMenuAuth" parameterType="portalxpert.adm.sys.model.AdmSysMenuAuthVO">
		<![CDATA[
		INSERT INTO ADM_MENU_AUTH(
		 AUTH_CD
		, MENU_CONTS
		, DEL_YN
		, REGR_ID
		, REGR_NAME
		, REG_DTTM
		, UPDR_ID
		, UPDR_NAME
		, UPD_DTTM
		) VALUES (
		 #{authCd}
		, CHAR_TO_CLOB(#{menuConts})
		, #{delYn}
		, #{updrId}
		, #{updrName}
		, sysdate
		, #{updrId}
		, #{updrName}
		, sysdate
		)
		]]>
	</insert>	
	
	<update id="updateMenuAuth" parameterType="portalxpert.adm.sys.model.AdmSysMenuAuthVO">
		<![CDATA[
			UPDATE ADM_MENU_AUTH SET UPDR_ID = #{updrId}, UPD_DTTM = sysdate
									, MENU_CONTS = CHAR_TO_CLOB(#{menuConts})
		]]>
		<if test="delYn != null and delYn != ''"> , DEL_YN = #{delYn} </if>
		WHERE AUTH_CD = #{authCd}
	</update>	
	
	<select id="getUserDeptInfoList" resultType="portalxpert.adm.sys.model.AdmSysPsnUserInfoVO" parameterType="portalxpert.adm.sys.model.AdmSysPsnUserInfoVO">
		<![CDATA[
        SELECT
            A.DEPT_CODE
            ,A.DEPT_NAME
            ,A.DEPT_FNAME
        FROM PSN_DEPT_INFO A
		]]>
	</select>					

	<select id="getAuthInfo" parameterType="string" resultType="portalxpert.adm.sys.model.AdmSysAuthVO">
		SELECT A.AUTH_CD, B.AUTH_NM
		FROM ADM_USER_AUTH A,
		     ADM_AUTH B
		WHERE A.USER_ID = #{userId}
		AND   A.AUTH_CD = B.AUTH_CD
		AND   B.DEL_YN = 'N'
	</select>
			
</mapper>